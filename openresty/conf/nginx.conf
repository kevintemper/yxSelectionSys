worker_processes  auto;

events { worker_connections  1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # 访问日志里把 X-Env 打出来，调试更直观
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_env"';
  access_log  /var/log/nginx/access.log  main;

  # ======================= 你的后端（在宿主机上） =======================
  upstream yx_auth_gray { server host.docker.internal:9101; }  # yx-auth [gray]
  upstream yx_auth_prd  { server host.docker.internal:9103; }  # yx-auth [prd]

  # 如果后面也要做 store/gateway，同理再加：
  # upstream yx_store_gray { server host.docker.internal:9102; }
  # upstream yx_store_prd  { server host.docker.internal:9002; }
  # upstream yx_gateway    { server host.docker.internal:9300; }

  # ======================= 把 X-Env 映射成上游池名 =======================
  # 不带 X-Env 就默认走 prd；带 gray 就走灰度
  map $http_x_env $auth_upstream {
    default  yx_auth_prd;      # 未携带或其他值 -> 生产
    "~*gray" yx_auth_gray;     # 灰度
    "~*prd"  yx_auth_prd;      # 生产（显式）
  }

  server {
    listen       80;
    server_name  localhost;

    # ---------- 后端转发：/api/auth/** 按 X-Env 头切灰/产 ----------
    location /api/auth/ {
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://$auth_upstream;
    }

    # 其余静态页面（可保留默认）
    location / {
      root   /usr/local/openresty/nginx/html;
      index  index.html;
    }
     location /api/auth/captcha {
        # 代理到灰度环境的接口
        proxy_pass http://localhost:9101;
    }
  }
}
